//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LanguageCenter.model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class ForeignLanguageCenterEntities : DbContext
    {
        public ForeignLanguageCenterEntities()
            : base("name=ForeignLanguageCenterEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Category> Categories { get; set; }
        public DbSet<Class> Classes { get; set; }
        public DbSet<ClassStudent> ClassStudents { get; set; }
        public DbSet<ClassWeekDay> ClassWeekDays { get; set; }
        public DbSet<Course> Courses { get; set; }
        public DbSet<Language> Languages { get; set; }
        public DbSet<Level> Levels { get; set; }
        public DbSet<NewFeed> NewFeeds { get; set; }
        public DbSet<Payment> Payments { get; set; }
        public DbSet<PaymentMethod> PaymentMethods { get; set; }
        public DbSet<RegistrationClass> RegistrationClasses { get; set; }
        public DbSet<Staff> Staffs { get; set; }
        public DbSet<StaffAccount> StaffAccounts { get; set; }
        public DbSet<Student> Students { get; set; }
        public DbSet<StudentAccount> StudentAccounts { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<Teacher> Teachers { get; set; }
        public DbSet<TeacherAccount> TeacherAccounts { get; set; }
        public DbSet<TrainingResult> TrainingResults { get; set; }
        public DbSet<TrainingResultDetail> TrainingResultDetails { get; set; }
        public DbSet<WeekDay> WeekDays { get; set; }
    
        public virtual ObjectResult<uspTest_Result> uspTest(Nullable<long> id, string @char)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var charParameter = @char != null ?
                new ObjectParameter("char", @char) :
                new ObjectParameter("char", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspTest_Result>("uspTest", idParameter, charParameter);
        }
    }
}
