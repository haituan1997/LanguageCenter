@model LanguageCenter.Areas.Home.Models.TeacherModel.TeacherModel


<div class="modal-header" style=" background-color: #3ca4ab; color: white;">
    <h5 class="modal-title" id="exampleModalLabel">@Model.Title</h5>
    <button type="button" class="btn-close" data-mdb-dismiss="modal" aria-label="Close"></button>
</div>
<div class="modal-body">
    <form method="post" id="TeacherForm" action="@Url.Action("PostTeacher")" enctype="multipart/form-data">
        @*@Html.AntiForgeryToken()*@
        @Html.HiddenFor(x => x.TeacherID)
        @Html.HiddenFor(x => x.IsEdit)
        <div class="form-outline mb-4">
            <div class="profile profile-logo-margin text-center">
                @if (Model.AvatarUrl != null)
                {
                    <img class="profile-logo img-radius" id="imgVCAvatar" src="@Model.AvatarUrl" />
                }
                else
                {
                    <img class="profile-logo img-radius" id="imgVCAvatar" src="~/images/home-baner.png"/>
                }
                <input type="hidden" value="@Model.AvatarUrl" id="AvatarUrl" name="AvatarUrl" />
                <div class="hover-logo" id="browser">
                    <i class="fa fa-image-polaroid"></i>
                </div>
                <input type="file" name="file" id="file" accept=".jpg, .jpeg, .png*" style="display: none" />
                <span>Ảnh đại diện - <span style="color: #4b4e4d; font-weight: 300;margin-left:0;font-style:italic">Không bắt buộc</span></span>
            </div>
        </div>
        <div class="form-outline mb-4">
            <label class="form-label" for="form1Example1">Họ giáo viên</label>
            <input type="text" name="FirtName" id="FirtName" value="@Model.FirtName" autofocus class="form-control" tabindex="1" />
        </div>
        <div class="form-outline mb-4">
            <label class="form-label" for="form1Example2">Tên giáo viên</label>
            <input type="text" name="LastName" id="LastName" value="@Model.LastName" class="form-control" tabindex="2" />
        </div>
        <div class="form-outline mb-4">
            <label class="form-label" for="form1Example2">Email</label>
            <input type="text" name="Email" id="Email" value="@Model.Email" class="form-control" tabindex="3" />
        </div>
        <div class="form-outline mb-4">
            <label class="form-label" for="form1Example2">Số điện thoại</label>
            <input type="text" name="NumberPhone" id="NumberPhone" value="@Model.NumberPhone" class="form-control" tabindex="4" />
        </div>
        <div class="form-outline mb-4">
            <label class="form-label" for="form1Example2">Mô tả</label>
            <textarea type="text" name="Description" id="Description" value="@Model.Description" class="form-control" tabindex="5" />
        </div>
    </form>

</div>
<div class="modal-footer">
    <button id="btnSave" name="submit" value="Save" class="btn-save-popup" form="TeacherForm" tabindex="6"><span class="OpenSans">Lưu</span></button>
    <a name="submit" value="Save" class="btn-exit-popup" tabindex="7"><span class="OpenSans">Thoát</span></a>
</div>
<script src="~/javascript/notify.min.js"></script>
<script src="~/javascript/jquery.validate.js"></script>
<script>
    $(document).ready(function () {
        $('#file').on('change', function (e) {
            debugger
            var files = e.target.files;
            if (files.length > 0) {
                if (window.FormData !== undefined) {
                    var data = new FormData();
                    for (var x = 0; x < files.length; x++) {
                        data.append("file" + x, files[x]);
                    }
                    $.ajax({
                        type: "POST",
                        url: '/Teacher/UploadFile',
                        contentType: false,
                        processData: false,
                        data: data,
                        success: function (result) {
                            $('#imgVCAvatar').attr('src', '@Url.Content("~/images/Teachers/")' + result.fileName);
                            $('#AvatarUrl').val('@Url.Content("~/images/Teachers/")' + result.fileName);
                        },
                        error: function (xhr, status, p3, p4) {
                            var err = "Error " + " " + status + " " + p3 + " " + p4;
                            if (xhr.responseText && xhr.responseText[0] == "{")
                                err = JSON.parse(xhr.responseText).Message;
                            console.log(err);
                        }
                    });
                } else {
                    $.notify("Đã có lỗi xảy ra", {
                        globalPosition: "top center",
                        className: "error"
                    });
                }
            }
        });

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    $('#imgVCAvatar').attr('src', e.target.result);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        $("#imgVCAvatar").hover(function () {
            $("#browser").css("display", "block");
        }, function () {
            $("#browser").css("display", "none");
        });

        $("#browser").hover(function () {
            $("#browser").css("display", "block");
        }, function () {
            $("#browser").css("display", "none");
        });

        $("#browser").click(function () {
            $("#file").click();
        });

        var valid = function () {
            $("#TeacherForm").validate({
                rules: {
                    FirtName: { required:true },
                    LastName: { required:true },
                    Email: { email: true },
                    NumberPhone: { required:true },
                },
                messages: {
                    FirtName: {
                        required: "Họ giáo viên không được để trống!",
                    },
                    LastName: {
                        required: "Tên giáo viên không được để trống!",
                    },
                    Email: { email: "Email không đúng địng dạng!" },
                    NumberPhone: {
                        required: "Số điện thoại không được để trống!",
                    },
                },
                errorPlacement: function (error, element) {
                    error.insertAfter(element, "label-error");
                }
            })
        };
        valid();
        $('.btn-exit-popup,.btn-close').off('click').on('click', function (e) {

            e.preventDefault();
            $('#popUp').modal('hide');
            return;
        })
        $('#btnSave').off('click').on('click', function (e) {
            e.preventDefault();
            debugger
            var isValid = $('#TeacherForm').valid();
            if (!isValid) {
                //$("select.error + span")
                //    .find('span.select2-selection--single')
                //    .css('cssText', 'border: 1px solid #f58a73 !important');
                return false;
            }
            var data = $('#TeacherForm').serialize();
            var message = "";
            $.ajax({
                url: urlUpdatePopup,
                data: data,
                type: 'POST',
                dataType: 'json',
                success: function (result) {

                    if (result.success) {
                        var data = result.message;
                        $.notify(data, {
                            globalPosition: "top center",
                            className: "success"
                        });
                        $('#' + popUpName).modal('hide');
                        buildTable.ajax.reload();

                    }
                    else {
                        $.each(result,
                            function (index) {
                                message = result[index].Message;
                            });
                        $.notify(result.message, {
                            globalPosition: "top center",
                            className: "error"
                        });
                    }

                },
                error: function (result) {
                    $.each(result,
                        function (index) {
                            message = result[index].Message;
                        });
                    $.notify(result.message, {
                        globalPosition: "top center",
                        className: "error"
                    });
                }
            });
        })
    });
</script>